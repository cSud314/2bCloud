pipeline {
    agent any 

    environment {
        ACR_NAME = 'your-acr-name' // Replace with your ACR name
        IMAGE_NAME = 'hello-world-node' // Docker image name
        ACR_CREDENTIALS_ID = 'acr-credentials' // Jenkins credentials ID
        RESOURCE_GROUP = 'your-resource-group' // Replace with your resource group
        AKS_CLUSTER_NAME = 'your-aks-cluster' // Replace with your AKS cluster name
        KUBECONFIG = "${env.WORKSPACE}/kubeconfig" // Path to kubeconfig
    }

    stages {
        stage('Get AKS Credentials') {
            steps {
                script {
                    // Get AKS credentials using Azure CLI
                    withCredentials([[$class: 'UsernamePasswordMultiBinding', credentialsId: 'azure-credentials', usernameVariable: 'AZURE_USERNAME', passwordVariable: 'AZURE_PASSWORD']]) {
                        sh '''
                            az login --service-principal -u $AZURE_USERNAME -p $AZURE_PASSWORD --tenant your-tenant-id
                            az aks get-credentials --resource-group ${RESOURCE_GROUP} --name ${AKS_CLUSTER_NAME} --overwrite-existing
                        '''
                    }
                }
            }
        }

        stage('Deploy to AKS') {
            steps {
                script {
                    // Deploy to AKS using kubectl
                    sh '''
                        kubectl apply -f deployment.yaml
                        kubectl rollout status deployment/your-deployment-name # Replace with your deployment name
                    '''
                }
            }
        }
    }

    post {
        success {
            echo 'Deployment to AKS completed successfully!'
        }
        failure {
            echo 'Deployment to AKS failed.'
        }
    }
}
